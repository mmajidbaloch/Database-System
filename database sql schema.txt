-- CREATE DATABASE
CREATE DATABASE IF NOT EXISTS crlearn;
USE crlearn;

-- USERS TABLE
CREATE TABLE users (
    id INT AUTO_INCREMENT PRIMARY KEY,
    username VARCHAR(50) UNIQUE NOT NULL,
    email VARCHAR(100) UNIQUE,
    password_hash VARCHAR(255) NOT NULL,
    date_of_birth Date,
    gender ENUM('Male', 'Female', 'Other') DEFAULT 'Other',
    country VARCHAR(100),
    city VARCHAR(100),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- DECKS TABLE
CREATE TABLE decks (
    id INT AUTO_INCREMENT PRIMARY KEY,
    user_id INT NOT NULL,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE
);

-- NOTE TYPES TABLE
CREATE TABLE note_types (
    id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    fields TEXT, -- Stores JSON or comma-separated values
    templates TEXT -- Stores JSON with front/back templates
);

-- NOTES TABLE
CREATE TABLE notes (
    id INT AUTO_INCREMENT PRIMARY KEY,
    user_id INT NOT NULL,
    note_type_id INT NOT NULL,
    field_values TEXT NOT NULL, -- Stores JSON or delimited data
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE,
    FOREIGN KEY (note_type_id) REFERENCES note_types(id) ON DELETE CASCADE
);

-- FLASHCARDS TABLE
CREATE TABLE flashcards (
    id INT AUTO_INCREMENT PRIMARY KEY,
    note_id INT NOT NULL,
    deck_id INT NOT NULL,
    template_name VARCHAR(100) DEFAULT NULL,
    card_type ENUM('new', 'learning', 'review') DEFAULT 'new',
    due_date DATE DEFAULT NULL,
    intervals INT DEFAULT 0,  -- (renamed from "intervels" for clarity)
    ease_factor FLOAT DEFAULT 2.5,
    reps INT DEFAULT 0,
    lapses INT DEFAULT 0,
    last_reviewed TIMESTAMP NULL DEFAULT NULL,
    is_suspended BOOLEAN DEFAULT FALSE,
    is_buried BOOLEAN DEFAULT FALSE,
    flag_color ENUM('none', 'red', 'orange', 'green', 'blue') DEFAULT 'none',
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (note_id) REFERENCES notes(id) ON DELETE CASCADE,
    FOREIGN KEY (deck_id) REFERENCES decks(id) ON DELETE CASCADE
);

-- TAGS TABLE
CREATE TABLE tags (
    id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(50) UNIQUE NOT NULL
);

-- NOTE_TAGS TABLE (Many-to-Many relationship between notes and tags)
CREATE TABLE note_tags (
    note_id INT NOT NULL,
    tag_id INT NOT NULL,
    PRIMARY KEY (note_id, tag_id),
    FOREIGN KEY (note_id) REFERENCES notes(id) ON DELETE CASCADE,
    FOREIGN KEY (tag_id) REFERENCES tags(id) ON DELETE CASCADE
);

-- DECK_TAGS TABLE (Many-to-Many relationship between decks and tags)
CREATE TABLE deck_tags (
    deck_id INT NOT NULL,
    tag_id INT NOT NULL,
    PRIMARY KEY (deck_id, tag_id),
    FOREIGN KEY (deck_id) REFERENCES decks(id) ON DELETE CASCADE,
    FOREIGN KEY (tag_id) REFERENCES tags(id) ON DELETE CASCADE
);

-- FLASHCARD_TAGS TABLE (Many-to-Many relationship between flashcards and tags)
CREATE TABLE flashcard_tags (
    flashcard_id INT NOT NULL,
    tag_id INT NOT NULL,
    PRIMARY KEY (flashcard_id, tag_id),
    FOREIGN KEY (flashcard_id) REFERENCES flashcards(id) ON DELETE CASCADE,
    FOREIGN KEY (tag_id) REFERENCES tags(id) ON DELETE CASCADE
);

-- USER SETTINGS
CREATE TABLE settings (
    user_id INT PRIMARY KEY,
    new_cards_per_day INT DEFAULT 20,
    max_reviews_per_day INT DEFAULT 100,
    learning_steps VARCHAR(100) DEFAULT '1,10',
    ease_bonus FLOAT DEFAULT 1.3,
    FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE
);

-- REVIEW LOGS
CREATE TABLE review_logs (
    id INT AUTO_INCREMENT PRIMARY KEY,
    flashcard_id INT NOT NULL,
    user_id INT NOT NULL,
    rating INT CHECK (rating BETWEEN 1 AND 5),
    review_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    intervals_before INT,
    intervals_after INT,
    ease_factor_before FLOAT,
    ease_factor_after FLOAT,
    FOREIGN KEY (flashcard_id) REFERENCES flashcards(id) ON DELETE CASCADE,
    FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE
);

-- DECK-SPECIFIC SETTINGS
CREATE TABLE deck_settings (
    deck_id INT PRIMARY KEY,
    new_cards_per_day INT DEFAULT 20,
    max_reviews_per_day INT DEFAULT 100,
    learning_steps VARCHAR(100) DEFAULT '1,10',
    ease_bonus FLOAT DEFAULT 1.3,
    FOREIGN KEY (deck_id) REFERENCES decks(id) ON DELETE CASCADE
);

-- FILTERED DECKS
CREATE TABLE filtered_decks (
    id INT AUTO_INCREMENT PRIMARY KEY,
    user_id INT NOT NULL,
    name VARCHAR(100) NOT NULL,
    search_query TEXT NOT NULL,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE
);

CREATE TABLE filtered_deck_cards (
    filtered_deck_id INT NOT NULL,
    flashcard_id INT NOT NULL,
    PRIMARY KEY (filtered_deck_id, flashcard_id),
    FOREIGN KEY (filtered_deck_id) REFERENCES filtered_decks(id) ON DELETE CASCADE,
    FOREIGN KEY (flashcard_id) REFERENCES flashcards(id) ON DELETE CASCADE
);

-- SHARED DECKS
CREATE TABLE shared_decks (
    id INT AUTO_INCREMENT PRIMARY KEY,
    deck_id INT NOT NULL,
    shared_by INT NOT NULL,
    title VARCHAR(100) NOT NULL,
    description TEXT,
    is_public BOOLEAN DEFAULT TRUE,
    shared_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (deck_id) REFERENCES decks(id) ON DELETE CASCADE,
    FOREIGN KEY (shared_by) REFERENCES users(id) ON DELETE CASCADE
);

-- USER REVIEWS (App Feedback)
CREATE TABLE user_reviews (
    id INT AUTO_INCREMENT PRIMARY KEY,
    user_id INT NOT NULL,
    rating INT CHECK (rating BETWEEN 1 AND 5),
    feedback TEXT,
    submitted_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE
);

-- USER PROGRESS: Tracks cumulative stats per user
CREATE TABLE user_stats (
    user_id INT PRIMARY KEY,
    total_reviews INT DEFAULT 0,
    total_cards_learned INT DEFAULT 0,
    total_time_spent_seconds INT DEFAULT 0,
    review_streak_days INT DEFAULT 0,
    current_streak_start DATE DEFAULT NULL,
    last_reviewed_date DATE DEFAULT NULL,
    points INT DEFAULT 0,
    FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE
);

-- REVIEW SESSIONS: Logs each session for time tracking and detailed analysis
CREATE TABLE review_sessions (
    id INT AUTO_INCREMENT PRIMARY KEY,
    user_id INT NOT NULL,
    session_start TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    session_end TIMESTAMP NULL,
    cards_reviewed INT DEFAULT 0,
    cards_learned INT DEFAULT 0,
    time_spent_seconds INT DEFAULT 0,
    FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE
);

-- LEADERBOARD SNAPSHOTS: Cached leaderboard data for fast global ranking
CREATE TABLE leaderboard_snapshots (
    id INT AUTO_INCREMENT PRIMARY KEY,
    captured_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    user_id INT NOT NULL,
    username VARCHAR(50) NOT NULL,
    points INT NOT NULL,
    rank INT NOT NULL,
    FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE
);